{"version":3,"file":"static/js/326.85bac9e3.chunk.js","mappings":"mTAEMA,E,MAAWC,GAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAiB,mCAAG,WAAMC,GAAN,yFACRN,EAASO,IAAT,wBADQ,uBACvBC,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,sDAKjBC,EAAe,mCAAG,wGAAQH,KAAAA,OAAR,MAAe,EAAf,EAAkBI,EAAlB,EAAkBA,MAAlB,SACNV,EAASO,IAAT,gBAA8B,CACnDJ,OAAQ,CACNO,MAAAA,EACAJ,KAAAA,KAJyB,uBACrBE,EADqB,EACrBA,KADqB,kBAOtBA,GAPsB,2CAAH,sDAUfG,EAAgB,mCAAG,WAAMC,GAAN,yFACPZ,EAASO,IAAT,iBAAuBK,IADhB,uBACtBJ,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,sDAKhBK,EAAgB,mCAAG,WAAMD,GAAN,yFACPZ,EAASO,IAAT,iBAAuBK,EAAvB,aADO,uBACtBJ,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,sDAKhBM,EAAc,mCAAG,WAAMF,GAAN,yFACLZ,EAASO,IAAT,iBAAuBK,EAAvB,aADK,uBACpBJ,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,uD,0ICjC3B,EAA0B,yBAA1B,EAA0D,sBAA1D,EAAuF,sBAAvF,EAA0H,4BAA1H,EAAkK,2B,SC8ClK,EAzCgB,WACd,OAA8BO,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQL,GAAYM,EAAAA,EAAAA,MAAZN,SAERO,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,gHAEIN,EAAAA,EAAAA,IAAeF,GAFnB,gBAEdS,EAFc,EAEdA,QACRJ,EAAWI,GAHW,yGAAH,qDAOvBD,MACC,CAACR,IAEJ,IAAMU,EAAcN,EAAQO,KAAI,SAAAC,GAAM,OACpC,gBAAIC,UAAWC,EAAf,WACE,eAAGD,UAAWC,EAAd,WACE,iBAAMD,UAAWC,EAAjB,sBACCF,EAAOG,WAEV,eAAGF,UAAWC,EAAd,WACE,iBAAMD,UAAWC,EAAjB,uBACCF,EAAOI,aAPqBJ,EAAOK,OAY1C,OACE,8BACGC,QAAQd,EAAQe,SACf,eAAIN,UAAWC,EAAf,SAAgCJ,KAEhC,cAAGG,UAAWC,EAAd","sources":["api/themoviedbAPI.js","webpack://goit-react-hw-05-movies/./src/components/Reviews/reviews.module.css?5c8c","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '9f2bc6dc8b2f46ed6de79a15158912b2',\n  },\n});\n\nexport const getFavoriteMovies = async page => {\n  const { data } = await instance.get(`/trending/movie/week`);\n  return data;\n};\n\nexport const searchMoviesKey = async ({page = 1, query}) => {\n  const { data } = await instance.get(`/search/movie`, {\n    params: {\n      query,\n      page,\n    },\n  });\n  return data;\n};\n\nexport const getDetailsMovies = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}`);\n  return data;\n};\n\nexport const getMoviesCredits = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}/credits`);\n  return data;\n};\n\nexport const getMovieReview = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}/reviews`);\n  return data;\n};","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"reviews_section__du-iK\",\"item\":\"reviews_item__boRvd\",\"text\":\"reviews_text__e7pNt\",\"textAccent\":\"reviews_textAccent__7pprt\",\"noReviews\":\"reviews_noReviews__1tbh2\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReview } from '../../api/themoviedbAPI';\n\nimport styles from './reviews.module.css';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchMovieReviews = async () => {\n      try {\n        const { results } = await getMovieReview(movieId);\n        setReviews(results);\n      } catch (err) {}\n    };\n\n    fetchMovieReviews();\n  }, [movieId]);\n\n  const reviewsList = reviews.map(review => (\n    <li className={styles.item} key={review.id}>\n      <p className={styles.text}>\n        <span className={styles.textAccent}>Author: </span>\n        {review.author}\n      </p>\n      <p className={styles.text}>\n        <span className={styles.textAccent}>Comment: </span>\n        {review.content}\n      </p>      \n    </li>\n  ));\n\n  return (\n    <>\n      {Boolean(reviews.length) ? (\n        <ul className={styles.section}>{reviewsList}</ul>\n      ) : (\n        <p className={styles.noReviews}>\n          We don't have any reviews for this movie.\n        </p>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;"],"names":["instance","axios","baseURL","params","api_key","getFavoriteMovies","page","get","data","searchMoviesKey","query","getDetailsMovies","movieId","getMoviesCredits","getMovieReview","useState","reviews","setReviews","useParams","useEffect","fetchMovieReviews","results","reviewsList","map","review","className","styles","author","content","id","Boolean","length"],"sourceRoot":""}